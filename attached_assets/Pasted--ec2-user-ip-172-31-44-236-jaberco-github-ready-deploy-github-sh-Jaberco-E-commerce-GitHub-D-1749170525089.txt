[ec2-user@ip-172-31-44-236 jaberco-github-ready]$ ./deploy-github.sh
üöÄ Jaberco E-commerce GitHub Deployment Script
===============================================
‚úÖ Node.js version: v18.20.8
üîç Validating environment configuration...
‚úÖ AWS Parameter Store configuration detected - secrets will be loaded at runtime
‚úÖ Environment configuration validated
üì¶ Installing dependencies...

added 3 packages, and audited 655 packages in 3s

81 packages are looking for funding
  run `npm fund` for details

5 moderate severity vulnerabilities

To address all issues (including breaking changes), run:
  npm audit fix --force

Run `npm audit` for details.
üèóÔ∏è  Building application...

> rest-express@1.0.0 build
> npm run build:frontend && npm run build:backend


> rest-express@1.0.0 build:frontend
> vite build

vite v5.4.19 building for production...
‚úì 3543 modules transformed.
../dist/public/index.html                                      1.83 kB ‚îÇ gzip:   0.70 kB
../dist/public/assets/IMG_2944_1749106310066-BVrfYKOM.gif    319.01 kB
../dist/public/assets/index-BmyiPwYR.css                     125.71 kB ‚îÇ gzip:  38.52 kB
../dist/public/assets/index-BPvUJXhq.js                    1,340.12 kB ‚îÇ gzip: 369.36 kB

(!) Some chunks are larger than 500 kB after minification. Consider:
- Using dynamic import() to code-split the application
- Use build.rollupOptions.output.manualChunks to improve chunking: https://rollupjs.org/configuration-options/#output-manualchunks
- Adjust chunk size limit for this warning via build.chunkSizeWarningLimit.
‚úì built in 5m 49s

> rest-express@1.0.0 build:backend
> esbuild server/index.ts --platform=node --packages=external --bundle --format=esm --outdir=dist

‚ñ≤ [WARNING] The CommonJS "module" variable is treated as a global variable in an ECMAScript module and may not work as expected [commonjs-variable-in-esm]

    aws-secrets.js:102:0:
      102 ‚îÇ module.exports = {
          ‚ïµ ~~~~~~

  This file is considered to be an ECMAScript module because the enclosing "package.json" file sets
  the type of this file to "module":

    package.json:4:10:
      4 ‚îÇ   "type": "module",
        ‚ïµ           ~~~~~~~~

  Node's package format requires that CommonJS files in a "type": "module" package use the ".cjs"
  file extension.

‚ñ≤ [WARNING] Duplicate member "initializeDatabase" in class body [duplicate-class-member]

    server/storage.ts:1625:16:
      1625 ‚îÇ   private async initializeDatabase() {
           ‚ïµ                 ~~~~~~~~~~~~~~~~~~

  The original member "initializeDatabase" is here:

    server/storage.ts:704:16:
      704 ‚îÇ   private async initializeDatabase() {
          ‚ïµ                 ~~~~~~~~~~~~~~~~~~

2 warnings

  dist/index.js  255.8kb

‚ö° Done in 88ms
üöÄ Starting application with PM2...
[PM2][ERROR] File ecosystem.config.js malformated
Error [ERR_REQUIRE_ESM]: require() of ES Module /home/ec2-user/unitypallet/jaberco-github-ready/ecosystem.config.js from /usr/lib/node_modules/pm2/lib/Common.js not supported.
ecosystem.config.js is treated as an ES module file as it is a .js file whose nearest parent package.json contains "type": "module" which declares all .js files in that package scope as ES modules.
Instead either rename ecosystem.config.js to end in .cjs, change the requiring code to use dynamic import() which is available in all CommonJS modules, or change "type": "module" to "type": "commonjs" in /home/ec2-user/unitypallet/jaberco-github-ready/package.json to treat all .js files as CommonJS (using .mjs for all ES modules instead).

    at Common.parseConfig (/usr/lib/node_modules/pm2/lib/Common.js:331:12)
    at API._startJson (/usr/lib/node_modules/pm2/lib/API.js:934:25)
    at API.start (/usr/lib/node_modules/pm2/lib/API.js:329:12)
    at /usr/lib/node_modules/pm2/lib/binaries/CLI.js:297:13
    at /usr/lib/node_modules/pm2/node_modules/async/internal/withoutIndex.js:8:40
    at replenish (/usr/lib/node_modules/pm2/node_modules/async/internal/eachOfLimit.js:81:17)
    at /usr/lib/node_modules/pm2/node_modules/async/internal/eachOfLimit.js:86:9
    at eachLimit (/usr/lib/node_modules/pm2/node_modules/async/forEachLimit.js:47:45)
    at awaitable (/usr/lib/node_modules/pm2/node_modules/async/internal/awaitify.js:14:28)
    at Command.<anonymous> (/usr/lib/node_modules/pm2/lib/binaries/CLI.js:296:7)
    at Command.listener (/usr/lib/node_modules/pm2/node_modules/commander/index.js:315:8)
    at Command.emit (node:events:517:28)
    at Command.parseArgs (/usr/lib/node_modules/pm2/node_modules/commander/index.js:651:12)
    at Command.parse (/usr/lib/node_modules/pm2/node_modules/commander/index.js:474:21)
    at beginCommandProcessing (/usr/lib/node_modules/pm2/lib/binaries/CLI.js:154:13)
    at /usr/lib/node_modules/pm2/lib/binaries/CLI.js:228:7
    at /usr/lib/node_modules/pm2/lib/API.js:181:16
    at /usr/lib/node_modules/pm2/lib/Client.js:54:16
    at Timeout._onTimeout (/usr/lib/node_modules/pm2/lib/Client.js:369:9) {
  code: 'ERR_REQUIRE_ESM'
}
[PM2] Saving current process list...
[PM2][WARN] PM2 is not managing any process, skipping save...
[PM2][WARN] To force saving use: pm2 save --force
[PM2] Init System found: systemd
[PM2] To setup the Startup Script, copy/paste the following command:
sudo env PATH=$PATH:/usr/bin /usr/lib/node_modules/pm2/bin/pm2 startup systemd -u ec2-user --hp /home/ec2-user
‚úÖ Deployment completed successfully!
üìä Check status: pm2 status
üìù View logs: pm2 logs jaberco-app
üåê Application running on port 5000
