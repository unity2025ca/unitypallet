<IfModule mod_rewrite.c>
  RewriteEngine On
  
  # إذا كان الطلب لملف موجود، قدمه مباشرة
  RewriteCond %{REQUEST_FILENAME} -f
  RewriteRule ^ - [L]
  
  # توجيه الطلبات للملفات الثابتة
  RewriteRule ^(assets|images|css|js|fonts|favicon\.ico)(.*)$ dist/public/$1$2 [L]
  
  # توجيه طلبات API إلى تطبيق Node.js
  # استخدم دالة RewriteCond للتحقق من المنفذ المستخدم من cPanel
  # ملاحظة: يجب تحديث المنفذ هنا ليتوافق مع المنفذ المعين في cPanel
  RewriteCond %{HTTP_HOST} ^(.*)$
  RewriteRule ^api(/.*)?$ http://127.0.0.1:3000/api$1 [P,L]
  
  # إضافة قاعدة احتياطية إذا فشلت القاعدة السابقة
  RewriteCond %{REQUEST_URI} ^/api
  RewriteRule ^api(/.*)?$ http://%{HTTP_HOST}:3000/api$1 [P,L]
  
  # لكل الطلبات الأخرى، قدم ملف index.html
  RewriteRule ^ dist/public/index.html [L]
  
  # إضافة قواعد لمعالجة أخطاء المنفذ
  # هذه القواعد تساعد في حالة وجود مشاكل في توجيه API
  ErrorDocument 503 /dist/public/index.html
  ErrorDocument 502 /dist/public/index.html
</IfModule>

# Evitar acceso a archivos sensibles
<FilesMatch "^\.env|^\.git|ecosystem\.config\.js|package\.json|package-lock\.json|postcss\.config\.js|tailwind\.config\.js|tsconfig\.json|drizzle\.config\.ts">
  Order allow,deny
  Deny from all
</FilesMatch>

# Configuraciones adicionales
<IfModule mod_headers.c>
  # Configurar caché para archivos estáticos
  <FilesMatch "\.(jpg|jpeg|png|gif|ico|css|js)$">
    Header set Cache-Control "max-age=31536000, public"
  </FilesMatch>
  
  # Configurar CORS
  Header set Access-Control-Allow-Origin "*"
  Header set Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS"
  Header set Access-Control-Allow-Headers "Content-Type, Authorization"
</IfModule>